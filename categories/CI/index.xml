<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CI on starifly&#39;s Blog</title>
    <link>http://starifly.github.io/categories/CI/</link>
    <description>Recent content in CI on starifly&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 18 Aug 2018 12:18:32 +0800</lastBuildDate>
    
	<atom:link href="http://starifly.github.io/categories/CI/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用Webhook和Github实现hugo的自动部署</title>
      <link>http://starifly.github.io/post/webhook-github-autodeploy/</link>
      <pubDate>Sat, 18 Aug 2018 12:18:32 +0800</pubDate>
      
      <guid>http://starifly.github.io/post/webhook-github-autodeploy/</guid>
      <description>&lt;p&gt;之前&lt;a href=&#34;https://itlaws.cn/post/hugo-caddy-autodeplay/&#34; target=&#34;_blank&#34;&gt;《通过github和caddy实现hugo的自动部署》&lt;/a&gt;，使用的是 caddy 的 http.git 插件。最近发现，那方法不管用了，不知道原因。&lt;/p&gt;

&lt;p&gt;所以决定使用传统的 webhook 。原理是：在 vps 运行 webhook 监听程序，github 收到 push 事件后，&lt;/p&gt;

&lt;p&gt;就通知该监听程序，由该监听程序执行相应的命令。现在记录一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugo 自动化部署脚本</title>
      <link>http://starifly.github.io/post/hugo-deploy-script/</link>
      <pubDate>Sat, 18 Aug 2018 12:01:32 +0800</pubDate>
      
      <guid>http://starifly.github.io/post/hugo-deploy-script/</guid>
      <description>&lt;p&gt;之前我写了一个脚本用来自动部署我的 Hugo 博客，今天闲来无事完善了一下这个脚本，使这个脚本更加通用一些。&lt;/p&gt;

&lt;p&gt;脚本路径：&lt;a href=&#34;https://github.com/coderzh/coderzh-hugo-blog/blob/master/deploy.py&#34; target=&#34;_blank&#34;&gt;https://github.com/coderzh/coderzh-hugo-blog/blob/master/deploy.py&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>通过webhook将Hugo自动部署至GitHub Pages和GitCafe Pages</title>
      <link>http://starifly.github.io/post/use-webhook-automated-deploy-hugo/</link>
      <pubDate>Thu, 16 Aug 2018 21:13:08 +0800</pubDate>
      
      <guid>http://starifly.github.io/post/use-webhook-automated-deploy-hugo/</guid>
      <description>&lt;p&gt;本文的主要内容如标题所示，通过webhook将Hugo自动部署至GitHub Pages和GitCafe Pages。如果你正好有这个需求，看这篇文章正好，可以节省你不少时间。如果不是，了解一下也无妨。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>持续集成教程 1 通识科普</title>
      <link>http://starifly.github.io/post/Travis-basis/</link>
      <pubDate>Thu, 16 Aug 2018 10:24:28 +0800</pubDate>
      
      <guid>http://starifly.github.io/post/Travis-basis/</guid>
      <description>&lt;p&gt;本教程系列将以 Travis CI 为主，我也不知道以后会不会讲 AppVeyor ，我也不知道以后会不会讲 Circle CI 和 CodeShip 。
这篇文章你可以把它当成一个索引，我给出了使用 Travis 需要阅读的内容，读者可以根据自己的需求选择阅读文档的特定部分。&lt;/p&gt;

&lt;h2 id=&#34;ci-能做啥&#34;&gt;CI 能做啥&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;能帮你在云端自动编译项目&lt;/li&gt;
&lt;li&gt;每次你推送代码就会触发编译&lt;/li&gt;
&lt;li&gt;可以保留编译生成的目标文件&lt;/li&gt;
&lt;li&gt;自动上传 release&lt;/li&gt;
&lt;li&gt;编译失败发邮件提醒你&lt;/li&gt;
&lt;li&gt;编译失败发 Slack 消息提醒你&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;等等功能（这些都是最基本的）&lt;/p&gt;

&lt;p&gt;混开源社区的 friends 喜欢使用一些现有的 CI 服务，比如 Travis, AppVeyor, Circle CI, CodeShip 等，
公司企业喜欢自己写 CI 自己用，因为这本来就是个高度定制的东西，要是你能提供高度定制的环境（比如装好了依赖的服务器）
当然做 CI 就超级简单了。&lt;/p&gt;

&lt;p&gt;但是我们是混开源社区的 friends ，所以没有这种操作，首选当然是 Travis CI 。&lt;/p&gt;

&lt;p&gt;理由： Linux + 自动部署&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>